pipeline {
    agent 
<<<<<<< HEAD
        { 
            label 'vm-slave' 
        } 
    stages {
        parallel {
        stage('build-client') {
          steps {
            sh 'docker build -f client/web/Dockerfile -t boathouse_client:latest client/web'
          }
        }

        stage('build-service-api') {
          steps {
            sh 'docker build -f statistics-service/api/Dockerfile -t boathouse_statistics_service_api:latest statistics-service/api'
          }
        }

        stage('build-service-worker') {
          steps {
            sh 'docker build -f statistics-service/worker/Dockerfile -t boathouse_statistics_service_worker:latest statistics-service/worker'
          }
        }

        stage('buile-management') {
          steps {
            sh '''docker build -f management/tests/Dockerfile -t boathouse_management:latest management/tests
'''
          }
        }

      }
        stage('Dev') { 
            agent 
            { 
                label 'vm-slave' 
            }
=======
    { 
        label 'vm-slave' 
    }
    environment {
      DOCKER_REPO_URL = 'tool.devopshub.cn:2020/idcps'
    }
    stages {
        stage('build') {
          steps {
            echo repo url is ${DOCKER_REPO_URL}
            echo will build image: ${DOCKER_REPO_URL}/client:${env.BUILD_ID}
            sh 'docker build -f client/web/Dockerfile -t ${DOCKER_REPO_URL}/client:${env.BUILD_ID} client/web'
            sh 'docker build -f statistics-service/api/Dockerfile -t ${DOCKER_REPO_URL}/statistics_service_api:${env.BUILD_ID} statistics-service/api'
            sh 'docker build -f statistics-service/worker/Dockerfile -t ${DOCKER_REPO_URL}/statistics_service_worker:${env.BUILD_ID} statistics-service/worker'
            sh 'docker build -f management/web/Dockerfile -t ${DOCKER_REPO_URL}/management:${env.BUILD_ID} management/web'
            sh 'docker build -f product-service/api/Dockerfile -t ${DOCKER_REPO_URL}/product_service_api:${env.BUILD_ID} product-service/api'
          }
        }
        stage('Dev') { 
>>>>>>> origin/master
            steps {
                sh 'echo hello world! Dev!'
            }
        }
<<<<<<< HEAD
        stage('Test') { 
            agent 
            { 
                label 'vm-slave' 
            }
            
=======
        stage('Test') {  
>>>>>>> origin/master
            steps {
                input("Please confirm to deploy test env?")
                sh 'echo hello world! Test!'
            }
        }
        stage('Production') { 
<<<<<<< HEAD
            agent 
            { 
                label 'vm-slave' 
            }
=======
>>>>>>> origin/master
            steps {
                input("Please confirm to deploy production env?")
                sh 'echo hello world! Deploy!'
            }
        }
    }
}